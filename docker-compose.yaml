version: '3'
services:

  # Simulation
  epanet:
    container_name: epanet
    depends_on:
      - openplc
    build:
      context: ./epanet/.
      dockerfile: Dockerfile
    volumes:
      - ./epanet/app:/app
    networks:
      - zone1
      - zone2
      - zone3

  # Central systems
  openplc:
    container_name: openplc
    depends_on:
      - scadalts
    build:
      context: ./openplc/.
      dockerfile: Dockerfile
      args:
        script: script.st
        database: database.sh
    expose:
      - "8080" 
      - "502" # Access for ScadaLTS
    ports:
      - "8080:8080" # Used for external access and debugging
    networks:
      - plc_network

  scadalts:
    container_name: scadalts
    image: scadalts/scadalts:latest
    environment:
      - CATALINA_OPTS=-Xmx2G -Xms2G
    ports:
      - "8081:8080" # Used for external access and debugging
    depends_on:
      - database
    expose:
      - "8080"
    volumes:
      - ./scadalts/tomcat_log:/usr/local/tomcat/logs:rw
    command:
      [
        "/usr/bin/wait-for-it",
        "--host=database",
        "--port=3306",
        "--timeout=30",
        "--strict",
        "--",
        "/usr/local/tomcat/bin/catalina.sh",
        "run"
      ]
    networks:
      - intranet
      - plc_network
      - database

  database:
    container_name: database
    image: mysql/mysql-server:8.0.32
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=scadalts
    expose:
      - "3306"
    volumes:
      - ./scadalts/db_data:/var/lib/mysql:rw
      - ./scadalts/db_conf:/etc/mysql:ro
    command: --log_bin_trust_function_creators=1
    network:
      - database

  operator:
    container_name: operator
    image: ubuntu:latest
    depends_on:
      - scadalts
    command: tail -f /dev/null
    networks:
      - intranet

  # Zone 1
  vuln_machine_1:
    container_name: vuln_machine_1
    image: ubuntu:latest
    command: tail -f /dev/null
    networks:
      - intranet
      - zone1

  plc1:
    container_name: plc1
    depends_on:
      - scadalts
    build:
      context: ./openplc/.
      dockerfile: Dockerfile
      args:
        script: script.st
        database: database.sh
    expose:
      - "502"  # Only port 502 exposed as this will be a PLC slave
    networks:
      - zone1
      - plc_network

  # Zone 2
  vuln_machine_2:
    container_name: vuln_machine_2
    image: ubuntu:latest
    command: tail -f /dev/null
    networks:
      - intranet
      - zone2

  plc2:
    container_name: plc2
    depends_on:
      - scadalts
    build:
      context: ./openplc/.
      dockerfile: Dockerfile
      args:
        script: script.st
        database: database.sh
    expose:
      - "502"
    networks:
      - zone2
      - plc_network

  # Zone 3
  vuln_machine_3:
    container_name: vuln_machine_3
    image: ubuntu:latest
    command: tail -f /dev/null
    networks:
      - intranet
      - zone3

  plc3:
    container_name: plc3
    depends_on:
      - scadalts
    build:
      context: ./openplc/.
      dockerfile: Dockerfile
      args:
        script: script.st
        database: database.sh
    expose:
      - "502"
    networks:
      - zone3
      - plc_network

  # Monitoring
  opensearch-node:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node1
      - cluster.initial_cluster_manager_nodes=opensearch-node1
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]'
    networks:
      - opensearch-net

  suricata:
    container_name: suricata
    image: jasonish/suricata:latest
    cap_add:
      - SYS_NICE
      - NET_ADMIN
      - NET_RAW
    network_mode: "host"
    volumes:
      - ./suricata/var/log/suricata:/var/log/suricata
      - ./suricata/var/lib/suricata:/var/lib/suricata
      - ./suricata/etc/suricata:/etc/suricata
    command: -i eth0

volumes:
  opensearch-data1:

networks:
  intranet:
    driver: bridge
  plc_network:
    driver: bridge
  zone1:
    driver: bridge
  zone2:
    driver: bridge
  zone3:
    driver: bridge
  database:
    driver: bridge
  opensearch-net:
